name: Java CI with Maven and Docker

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set VERSION
      run: |
        echo "$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" > version.txt

    - name: Upload VERSION artifact
      uses: actions/upload-artifact@v4
      with:
        name: version
        path: version.txt
    
    - name: Build Docker Image
      run: docker build -t ${{ secrets.DOCKER_USERNAME }}/my-blog-front:$(cat version.txt) .

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/my-blog-front:$(cat version.txt)

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download VERSION artifact
        uses: actions/download-artifact@v4
        with:
          name: version

      - name: Set VERSION
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Deploy Instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            # 기존 컨테이너가 있으면 중지하고 삭제
            docker stop myblog-front-instance || true
            docker rm myblog-front-instance || true
      
            docker pull ${{ secrets.DOCKER_USERNAME }}/my-blog-front:${{ env.VERSION }}
            docker run --name myblog-front-instance \
            --network myblog-network \
            -p 8080:8080 \
            -e SPRING_PROFILES_ACTIVE=prod \
            -d ${{ secrets.DOCKER_USERNAME }}/my-blog-front:${{ env.VERSION }}
